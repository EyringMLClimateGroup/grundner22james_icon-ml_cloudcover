How to use the model:
model = tensorflow.keras.models.load_model(filename+'.h5')
model.predict(scaled input data)

Input/Output
------------
Input and output variables:
Index(['qv', 'qi', 'temp', 'pres', 'zg', 'fr_land', 'clc'], dtype='object')
The (order of) input variables:
['qv' 'qi' 'temp' 'pres' 'zg' 'fr_land']

Scaling
-------
Standard Scaler mean values:
[5.37583902e-03 4.66074476e-07 2.59638431e+02 5.52355186e+04
 6.79205353e+03 2.58202179e-01]
Standard Scaler standard deviation:
[6.01948591e-03 3.95929476e-06 3.55926320e+01 3.26636321e+04
 6.20697197e+03 4.28360743e-01]
=> Apply this standard scaling to (only) the input data before processing.

Preprocessed data
-----------------
/pf/b/b309170/my_work/icon-ml_data/cloud_cover_parameterization/grid_cell_based_v3/based_on_var_interpolated_data/cloud_cover_input_train_3.npy
/pf/b/b309170/my_work/icon-ml_data/cloud_cover_parameterization/grid_cell_based_v3/based_on_var_interpolated_data/cloud_cover_input_valid_3.npy
/pf/b/b309170/my_work/icon-ml_data/cloud_cover_parameterization/grid_cell_based_v3/based_on_var_interpolated_data/cloud_cover_output_train_3.npy
/pf/b/b309170/my_work/icon-ml_data/cloud_cover_parameterization/grid_cell_based_v3/based_on_var_interpolated_data/cloud_cover_output_valid_3.npy
/pf/b/b309170/my_work/icon-ml_data/cloud_cover_parameterization/grid_cell_based_v3/based_on_var_interpolated_data/cloud_cover_input_test_3.npy
/pf/b/b309170/my_work/icon-ml_data/cloud_cover_parameterization/grid_cell_based_v3/based_on_var_interpolated_data/cloud_cover_output_test_3.npy

Model
-----
Training loss: 15.2767
Validation loss: 15.2570
Test loss: 15.2720
Training epochs: 51